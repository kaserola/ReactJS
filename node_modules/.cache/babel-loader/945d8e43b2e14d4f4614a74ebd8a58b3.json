{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Roland\\\\reactjs-autocomplete\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Autocomplete from 'react-autocomplete';\nimport './App.css';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      value: ''\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      style: {\n        textAlign: \"center\",\n        marginTop: 50\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, \"React.js Autocomplete\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, \"Source: \", React.createElement(\"a\", {\n      href: \"https://jsonworld.com/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, \"jsonworld.com\")), React.createElement(Autocomplete, {\n      getItemValue: item => item.label,\n      items: [{\n        label: 'apple'\n      }, {\n        label: 'banana'\n      }, {\n        label: 'pear'\n      }],\n      renderItem: (item, isHighlighted) => React.createElement(\"div\", {\n        style: {\n          background: isHighlighted ? 'lightgray' : 'white'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, item.label),\n      value: this.state.value,\n      onChange: (event, value) => this.setState({\n        value\n      }),\n      onSelect: value => this.setState({\n        value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Roland/reactjs-autocomplete/src/App.js"],"names":["React","Component","Autocomplete","App","state","value","render","textAlign","marginTop","item","label","isHighlighted","background","event","setState"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,oBAAzB;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAExBG,KAFwB,GAEhB;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAFgB;AAAA;;AAIxBC,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE,QAAb;AAAuBC,QAAAA,SAAS,EAAE;AAAlC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAW;AAAG,MAAA,IAAI,EAAC,wBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAX,CAFJ,EAGI,oBAAC,YAAD;AACI,MAAA,YAAY,EAAGC,IAAD,IAAUA,IAAI,CAACC,KADjC;AAEI,MAAA,KAAK,EAAE,CACH;AAAEA,QAAAA,KAAK,EAAE;AAAT,OADG,EAEH;AAAEA,QAAAA,KAAK,EAAE;AAAT,OAFG,EAGH;AAAEA,QAAAA,KAAK,EAAE;AAAT,OAHG,CAFX;AAOI,MAAA,UAAU,EAAE,CAACD,IAAD,EAAOE,aAAP,KACR;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,UAAU,EAAED,aAAa,GAAG,WAAH,GAAiB;AAA5C,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKF,IAAI,CAACC,KADV,CARR;AAYI,MAAA,KAAK,EAAE,KAAKN,KAAL,CAAWC,KAZtB;AAaI,MAAA,QAAQ,EAAE,CAACQ,KAAD,EAAQR,KAAR,KAAkB,KAAKS,QAAL,CAAc;AAAET,QAAAA;AAAF,OAAd,CAbhC;AAcI,MAAA,QAAQ,EAAEA,KAAK,IAAI,KAAKS,QAAL,CAAc;AAAET,QAAAA;AAAF,OAAd,CAdvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CADJ;AAwBH;;AA7BuB;;AAiC5B,eAAeF,GAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport Autocomplete from 'react-autocomplete';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n\r\n    state = { value: '' };\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ textAlign: \"center\", marginTop: 50 }}>\r\n                <h1>React.js Autocomplete</h1>\r\n                <p>Source: <a href=\"https://jsonworld.com/\">jsonworld.com</a></p>\r\n                <Autocomplete\r\n                    getItemValue={(item) => item.label}\r\n                    items={[\r\n                        { label: 'apple' },\r\n                        { label: 'banana' },\r\n                        { label: 'pear' }\r\n                    ]}\r\n                    renderItem={(item, isHighlighted) =>\r\n                        <div style={{ background: isHighlighted ? 'lightgray' : 'white' }}>\r\n                            {item.label}\r\n                        </div>\r\n                    }\r\n                    value={this.state.value}\r\n                    onChange={(event, value) => this.setState({ value })}\r\n                    onSelect={value => this.setState({ value })}\r\n                />\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}